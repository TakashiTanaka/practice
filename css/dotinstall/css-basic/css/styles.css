@charset "utf-8";

body {
	color: #000;
	border: 1px solid pink;
}

h1 {
	/* inheritは継承されないプロパティを継承するよう指定できる */
	border: inherit;
	font-size: 48px;
	text-align: center;
	font-weight: normal;

	/* 日本語フォントを先に指定すると欧文もそのフォントになってしまうので、欧文は異なるフォントにしたい場合、欧文フォントの指定を先に書く */
	/* すべての指定フォントがない場合のために、総称フォントファミリを最後に指定する */
	font-family: Verdana, "Arial Black", メイリオ, sans-serif;
	text-decoration: line-through;
}

p {
	font-size: 16px;
	line-height: 3;
	font-weight: bold;
}

.u-line-text {
	background-color: pink;
	text-decoration: underline;
}

a {
	text-decoration: none;
}

main {
	font-size: 32px;

	/* line-heightは単位ありで指定すると、適用した要素に指定された文字サイズを基に計算され、子要素にも同じ値が適応されてしまう。単位無しで指定した場合はそれぞれの要素に指定された文字サイズを基に計算されるため、単位無しで指定されることが多い */
	line-height: 2;
}

section {
	font-size: 16px;
}

.v-align {
	line-height: 5;
}

.v-align img {
	/* vertical-align: bottom; */
	vertical-align: middle;
}

ul {
	/* list-style: circle;
	list-style-position: inside; */

	/* 行頭を画像にすることもできる */
	/* list-style-image: url(); */

	/* 一括指定することができる */
	/* list-style: circle inside url(); */
}

ol {
	list-style-type: lower-alpha;

	/* 一括指定プロパティで省略した場合は、省略したプロパティは初期設定が適用されてしまう */
	list-style: inside;
	/* list-style-type: none; */
}

.box-1 {
	background-color: orange;
	width: 200px;
	height: 200px;
	margin: 0 0 20px;
	/* margin-left: auto; */
	/* margin-right: auto; */
}
.box-2 {
	background-color: skyblue;
	width: 50%;
	height: 50%;
	/* border-width: 2px;
	border-style: solid;
	border-color: blue; */

	/* borderで一括指定できる */
	/* border: 2px solid blue; */
	/* border: 2px dashed blue; */

	/* 特定の辺だけにborderを適用させる */
	/* border-top: 2px solid blue;
	border-bottom: 2px solid blue; */

	/* 特定の辺だけ線をつけない処理 */
	/* border: 2px solid blue; */
	/* border-bottom: none; */

	/* 角丸処理 */
	/* border-radius: 10px; */

	/* コンテンツが溢れた時の処理はoverflowで指定 */
	overflow: hidden;
	/* overflow: scroll; */

	/* paddingはwidthとheightに含まれない */
	/* padding-top: 20px;
	padding-left: 40px; */
}
.box-3 {
	background-color: tomato;
	width: 100px;
	height: 40px;
	/* display: inline-block; */
	display: none;
	/* 他要素と同方向にmarginが指定されている場合、小さい方が打ち消される */
	/* margin-top: 10px; */
}

/* 
●displayの挙動
display				|	配置方法	|	サイズの操作
block					|	下に追加	|	有効
inline				|	左詰め		|	無効
inline-block	|	左詰め		|	有効
*/

.box-4 {
	background-color: beige;
	width: 100px;
	height: 100px;
	/* 
	box-shadow: x y blur shadowSize color;
	text-shadowにはshadowSizeを指定できない
	*/
	box-shadow: 10px 5px 3px 10px rgba(0, 0, 0, 0.5);
	text-shadow: 10px 5px 3px rgba(0, 0, 0, 0.5);
}

.box-5 {
	background-color: chocolate;
	width: 100px;
	height: 100px;

	/* staticは初期値 */
	/* position: static; */

	/* 
	relativeはstaticをベースとした位置
	位置指定プロパティを指定した場合、staticからの位置となる
	*/
	position: relative;

	/* 
	fixedはウィンドウの左上を基点とし、固定配置となる
	*/
	/* position: fixed;
	top: 30px;
	left: 30px; */

	/* box-sizing: border; を指定すると、widthとheightの値にborderの幅も含まれる */
	/* border: 20px solid mediumpurple; */
	/* box-sizing: border-box; */

	margin: 0 auto;
}

.box-6 {
	background-color: darkgreen;
	width: 100px;
	height: 100px;
	margin-left: auto;
}

.rect {
	/* width: 50px;
	height: 20px;
	background-color: deepskyblue; */

	/* 
	absoluteは親要素のpositionプロパティの値によって挙動が変わる
	親要素がstaticの場合はウィンドウの左上が基点となる
	親要素がrelativeの場合は親要素の左上の基点となる
	*/
	/* position: absolute;
	top: -5px;
	right: -5px; */
}

header {
	height: 80px;
	/* background-color: pink;
	background-image: url(../img/header.png);
	background-size: cover;
	background-position: center; */

	/* 一括指定で画像を使う場合は、sizeとpositionを/で区切って指定する必要がある */
	background: center/cover pink url(../img/header.png);
}

.float-text-1 img {
	/* floatを使うと回り込ませることができる */
	float: right;
}

.float-text-2 {
	/* 
	回り込みを解除するにはclearを使う
	また、clearが適用できるのはdisplayプロパティがblockの要素のみ
	 */
	clear: right;
}
